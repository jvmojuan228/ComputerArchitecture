entity ruta_datos is
    Port ( clk : in  STD_LOGIC;
           clr : in  STD_LOGIC;
           id : in  STD_LOGIC_VECTOR (6 downto 0);
           ir : in  STD_LOGIC_VECTOR (6 downto 0);
           sr : in  STD_LOGIC;
           sd : in  STD_LOGIC;
           sel : in  STD_LOGIC;
			  C,N,Z,V: out std_logic;
           qd : out  STD_LOGIC_VECTOR (6 downto 0)
			  );
end ruta_datos;

architecture Behavioral of ruta_datos is
component registro is
    Port ( clk : in  STD_LOGIC;
           clr : in  STD_LOGIC;
           S : in  STD_LOGIC;
           I : in  STD_LOGIC_VECTOR (6 downto 0);
           Q : out  STD_LOGIC_VECTOR (6 downto 0));
end component;
signal mux_aux, qd_aux, qr_aux: std_logic_vector(6 downto 0);
signal s_aux: std_logic_vector(7 downto 0);
begin

	--s_aux<= ('0'&qd_aux) + ('0'&qr_aux);
	--s_aux(7)<='0';
	s_aux(6)<=qd_aux(6) and qr_aux(6);
	s_aux(5)<=qd_aux(5) and qr_aux(5);
	s_aux(4)<=qd_aux(4) and qr_aux(4);
	s_aux(3)<=qd_aux(3) and qr_aux(3);
	s_aux(2)<=qd_aux(2) and qr_aux(2);
	s_aux(1)<=qd_aux(1) and qr_aux(1);
	s_aux(0)<=qd_aux(0) and qr_aux(0);
	
	mux_aux<= id when sel='0'
						else s_aux(6 downto 0);
	
	qd<=qd_aux;
	
	C<='0';
	N<=s_aux(6);
	Z<=not(s_aux(6) or s_aux(5) or s_aux(4) or s_aux(3) or s_aux(2) or s_aux(1) or s_aux(0));
	V<='0';
	
	registro_D: registro port map(clk=>clk, clr=>clr, S=>sd, I=>mux_aux, Q=>qd_aux);
	registro_R: registro port map(clk=>clk, clr=>clr, S=>sr, I=>ir, Q=>qr_aux);
end Behavioral;

